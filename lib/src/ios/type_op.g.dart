//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/services.dart';
import 'package:amap_core_fluttify/src/android/android.export.g.dart';
import 'package:amap_core_fluttify/src/ios/ios.export.g.dart';

Future<bool> isKindOfAMapURLSearch(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::isKindOfAMapURLSearch', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfAMapNaviConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::isKindOfAMapNaviConfig', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfAMapRouteConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::isKindOfAMapRouteConfig', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfAMapPOIConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::isKindOfAMapPOIConfig', {'refId': ref.refId});
  return result;
}

Future<bool> isKindOfAMapServices(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::isKindOfAMapServices', {'refId': ref.refId});
  return result;
}


Future<AMapURLSearch> asAMapURLSearch(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::asAMapURLSearch', {'refId': ref.refId});
  return AMapURLSearch()..refId = result;
}

Future<AMapNaviConfig> asAMapNaviConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::asAMapNaviConfig', {'refId': ref.refId});
  return AMapNaviConfig()..refId = result;
}

Future<AMapRouteConfig> asAMapRouteConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::asAMapRouteConfig', {'refId': ref.refId});
  return AMapRouteConfig()..refId = result;
}

Future<AMapPOIConfig> asAMapPOIConfig(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::asAMapPOIConfig', {'refId': ref.refId});
  return AMapPOIConfig()..refId = result;
}

Future<AMapServices> asAMapServices(Ref ref) async {
  final result = await MethodChannel('me.yohom/amap_core_fluttify').invokeMethod('RefClass::asAMapServices', {'refId': ref.refId});
  return AMapServices()..refId = result;
}
